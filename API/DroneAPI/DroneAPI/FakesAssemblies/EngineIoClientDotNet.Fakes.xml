<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EngineIoClientDotNet.Fakes</name>
    </assembly>
    <members>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableDictionary</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ContainsOf2IImmutableDictionaryOfM0M1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Quobject.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1,System.Boolean})">
            <summary>Sets the shim of ImmutableDictionary.Contains(IImmutableDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key, !!1 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2IEnumerableOfKeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create(IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2IEqualityComparerOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create(IEqualityComparer`1&lt;!!0&gt; keyComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2IEqualityComparerOfM0IEnumerableOfKeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create(IEqualityComparer`1&lt;!!0&gt; keyComparer, IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2IEqualityComparerOfM0IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create(IEqualityComparer`1&lt;!!0&gt; keyComparer, IEqualityComparer`1&lt;!!1&gt; valueComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.CreateOf2IEqualityComparerOfM0IEqualityComparerOfM1IEnumerableOfKeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.Create(IEqualityComparer`1&lt;!!0&gt; keyComparer, IEqualityComparer`1&lt;!!1&gt; valueComparer, IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.GetValueOrDefaultOf2IDictionaryOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},``0,``1})">
            <summary>Sets the shim of ImmutableDictionary.GetValueOrDefault(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.GetValueOrDefaultOf2IDictionaryOfM0M1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},``0,``1,``1})">
            <summary>Sets the shim of ImmutableDictionary.GetValueOrDefault(IDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key, !!1 defaultValue)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.GetValueOrDefaultOf2IReadOnlyDictionaryOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1})">
            <summary>Sets the shim of ImmutableDictionary.GetValueOrDefault(IReadOnlyDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.GetValueOrDefaultOf2IReadOnlyDictionaryOfM0M1M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1,``1})">
            <summary>Sets the shim of ImmutableDictionary.GetValueOrDefault(IReadOnlyDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key, !!1 defaultValue)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf2IEnumerableOfKeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; source)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf2IEnumerableOfKeyValuePairOfM0M1IEqualityComparerOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; source, IEqualityComparer`1&lt;!!0&gt; keyComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf2IEnumerableOfKeyValuePairOfM0M1IEqualityComparerOfM0IEqualityComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},Quobject.Collections.Immutable.ImmutableDictionary{``0,``1}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; source, IEqualityComparer`1&lt;!!0&gt; keyComparer, IEqualityComparer`1&lt;!!1&gt; valueComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},Quobject.Collections.Immutable.ImmutableDictionary{``1,``2}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},Quobject.Collections.Immutable.ImmutableDictionary{``1,``2}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; keyComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary.ToImmutableDictionaryOf3IEnumerableOfM0FuncOfM0M1FuncOfM0M2IEqualityComparerOfM1IEqualityComparerOfM2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2},Quobject.Collections.Immutable.ImmutableDictionary{``1,``2}})">
            <summary>Sets the shim of ImmutableDictionary.ToImmutableDictionary(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Func`2&lt;!!0,!!2&gt; elementSelector, IEqualityComparer`1&lt;!!1&gt; keyComparer, IEqualityComparer`1&lt;!!2&gt; valueComparer)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableDictionary`2</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.#ctor(Quobject.Collections.Immutable.ImmutableDictionary{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AddRangeIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AddT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.AddRangeIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.AddT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.Clear">
            <summary>Sets the shim of ImmutableDictionary`2.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ContainsKeyT0">
            <summary>Sets the shim of ImmutableDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; kv)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.CountGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of ImmutableDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of ImmutableDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.KeyComparerGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_KeyComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.KeysGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueAddRangeIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueClear">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueRemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueSetItemT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueSetItemsIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.RemoveT0">
            <summary>Sets the shim of ImmutableDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.SetItemT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.SetItemsIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ToBuilder">
            <summary>Sets the shim of ImmutableDictionary`2.ToBuilder()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>Sets the shim of ImmutableDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ValueComparerGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.ValuesGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.WithComparersIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.WithComparers(IEqualityComparer`1&lt;!0&gt; keyComparer)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.AllInstances.WithComparersIEqualityComparerOfT0IEqualityComparerOfT1">
            <summary>Sets the shim of ImmutableDictionary`2.WithComparers(IEqualityComparer`1&lt;!0&gt; keyComparer, IEqualityComparer`1&lt;!1&gt; valueComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Bind(Quobject.Collections.Immutable.IImmutableDictionary{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Bind(System.Collections.Generic.IReadOnlyDictionary{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Clear">
            <summary>Sets the shim of ImmutableDictionary`2.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.CompareKVKeyValuePairOfT0T1KeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.CompareKV(KeyValuePair`2&lt;!0,!1&gt; left, KeyValuePair`2&lt;!0,!1&gt; right)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.Constructor">
            <summary>Sets the shim of ImmutableDictionary`2.ImmutableDictionary`2()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ContainsKeyT0">
            <summary>Sets the shim of ImmutableDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; kv)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.CountGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.GetEnumerator">
            <summary>Sets the shim of ImmutableDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ItemGetT0">
            <summary>Sets the shim of ImmutableDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.KeyComparerGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_KeyComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.KeysGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueAddRangeIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueClear">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueRemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueSetItemT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.QuobjectCollectionsImmutableIImmutableDictionaryTKeyTValueSetItemsIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.Quobject.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.RemoveT0">
            <summary>Sets the shim of ImmutableDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.SetItemT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.SetItemsIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the shim of ImmutableDictionary`2.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableDictionary`2+Builder</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.#ctor(Quobject.Collections.Immutable.ImmutableDictionary{`0,`1}.Builder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AddKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AddT0T1">
            <summary>Sets the shim of Builder.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.AddKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.AddT0T1">
            <summary>Sets the shim of Builder.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.Clear">
            <summary>Sets the shim of Builder.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ContainsKeyT0">
            <summary>Sets the shim of Builder.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of Builder.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.CountGet">
            <summary>Sets the shim of Builder.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.GetEnumerator">
            <summary>Sets the shim of Builder.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of Builder.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ItemGetT0">
            <summary>Sets the shim of Builder.get_Item(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ItemSetT0T1">
            <summary>Sets the shim of Builder.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.KeyComparerGet">
            <summary>Sets the shim of Builder.get_KeyComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.KeyComparerSetIEqualityComparerOfT0">
            <summary>Sets the shim of Builder.set_KeyComparer(IEqualityComparer`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.KeysGet">
            <summary>Sets the shim of Builder.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.KeysSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of Builder.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.RemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.RemoveT0">
            <summary>Sets the shim of Builder.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.SetItemT0T1">
            <summary>Sets the shim of Builder.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Builder.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ToImmutable">
            <summary>Sets the shim of Builder.ToImmutable()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.TryGetValueT0T1Out">
            <summary>Sets the shim of Builder.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ValueComparerGet">
            <summary>Sets the shim of Builder.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ValueComparerSetIEqualityComparerOfT1">
            <summary>Sets the shim of Builder.set_ValueComparer(IEqualityComparer`1&lt;!1&gt; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ValuesGet">
            <summary>Sets the shim of Builder.get_Values()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.AllInstances.ValuesSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of Builder.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.Clear">
            <summary>Sets the shim of Builder.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ContainsKeyT0">
            <summary>Sets the shim of Builder.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of Builder.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.CountGet">
            <summary>Sets the shim of Builder.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.GetEnumerator">
            <summary>Sets the shim of Builder.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.IsReadOnlyGet">
            <summary>Sets the shim of Builder.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ItemGetT0">
            <summary>Sets the shim of Builder.get_Item(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ItemSetT0T1">
            <summary>Sets the shim of Builder.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.KeyComparerGet">
            <summary>Sets the shim of Builder.get_KeyComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.KeyComparerSetIEqualityComparerOfT0">
            <summary>Sets the shim of Builder.set_KeyComparer(IEqualityComparer`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.KeysGet">
            <summary>Sets the shim of Builder.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.KeysSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of Builder.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.RemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of Builder.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.RemoveT0">
            <summary>Sets the shim of Builder.Remove(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.SetItemT0T1">
            <summary>Sets the shim of Builder.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Builder.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ToImmutable">
            <summary>Sets the shim of Builder.ToImmutable()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.TryGetValueT0T1Out">
            <summary>Sets the shim of Builder.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ValueComparerGet">
            <summary>Sets the shim of Builder.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ValueComparerSetIEqualityComparerOfT1">
            <summary>Sets the shim of Builder.set_ValueComparer(IEqualityComparer`1&lt;!1&gt; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ValuesGet">
            <summary>Sets the shim of Builder.get_Values()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ShimBuilder.ValuesSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of Builder.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.StaticConstructor">
            <summary>Sets the shim of ImmutableDictionary`2.ImmutableDictionary`2()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ToBuilder">
            <summary>Sets the shim of ImmutableDictionary`2.ToBuilder()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.TryGetValueT0T1Out">
            <summary>Sets the shim of ImmutableDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ValueComparerGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.ValuesGet">
            <summary>Sets the shim of ImmutableDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.WithComparersIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableDictionary`2.WithComparers(IEqualityComparer`1&lt;!0&gt; keyComparer)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableDictionary`2.WithComparersIEqualityComparerOfT0IEqualityComparerOfT1">
            <summary>Sets the shim of ImmutableDictionary`2.WithComparers(IEqualityComparer`1&lt;!0&gt; keyComparer, IEqualityComparer`1&lt;!1&gt; valueComparer)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableList">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableList</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(IEqualityComparer`1&lt;!!0&gt; equalityComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1IEqualityComparerOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0},Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(IEqualityComparer`1&lt;!!0&gt; equalityComparer, IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1IEqualityComparerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},``0,Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(IEqualityComparer`1&lt;!!0&gt; equalityComparer, !!0 item)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1IEqualityComparerOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},``0[],Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(IEqualityComparer`1&lt;!!0&gt; equalityComparer, !!0[] items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(!!0 item)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.CreateOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.Create(!!0[] items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.ToImmutableListOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.ToImmutableList(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList.ToImmutableListOf1IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},Quobject.Collections.Immutable.ImmutableList{``0}})">
            <summary>Sets the shim of ImmutableList.ToImmutableList(IEnumerable`1&lt;!!0&gt; source, IEqualityComparer`1&lt;!!0&gt; equalityComparer)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableList`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.#ctor(Quobject.Collections.Immutable.ImmutableList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AddT0">
            <summary>Sets the shim of ImmutableList`1.Add(!0 value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.AddT0">
            <summary>Sets the shim of ImmutableList`1.Add(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.CheckRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.CheckRange(Int32 idx, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.Clear">
            <summary>Sets the shim of ImmutableList`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ContainsT0">
            <summary>Sets the shim of ImmutableList`1.Contains(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.CopyToInt32T0ArrayInt32Int32">
            <summary>Sets the shim of ImmutableList`1.CopyTo(Int32 index, !0[] array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.CopyToT0Array">
            <summary>Sets the shim of ImmutableList`1.CopyTo(!0[] array)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of ImmutableList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.CountGet">
            <summary>Sets the shim of ImmutableList`1.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ExistsPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Exists(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindIndexInt32Int32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Int32 startIndex, Int32 count, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindIndexInt32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Int32 startIndex, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindIndexPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindLastIndexInt32Int32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Int32 startIndex, Int32 count, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindLastIndexInt32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Int32 startIndex, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindLastIndexPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindLastPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLast(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.FindPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Find(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ForEachActionOfT0">
            <summary>Sets the shim of ImmutableList`1.ForEach(Action`1&lt;!0&gt; action)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ImmutableList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.GetRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.GetRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IndexOfT0Int32">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IndexOfT0Int32Int32">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.InsertRangeInt32IEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ImmutableList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.LastIndexOfT0">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.LastIndexOfT0Int32">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.LastIndexOfT0Int32Int32">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTAddRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTAddT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTClear">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTInsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTInsertRangeInt32IEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTRemoveAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTRemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTRemoveRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTRemoveT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTReplaceT0T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTSetItemInt32T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.QuobjectCollectionsImmutableIImmutableListTWithComparerIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.RemoveAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.RemoveRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.RemoveT0">
            <summary>Sets the shim of ImmutableList`1.Remove(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ReplaceT0T0">
            <summary>Sets the shim of ImmutableList`1.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SetItemInt32T0">
            <summary>Sets the shim of ImmutableList`1.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericICollectionTClear">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericICollectionTCopyToT0ArrayInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListClear">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ToBuilder">
            <summary>Sets the shim of ImmutableList`1.ToBuilder()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.ValueComparerGet">
            <summary>Sets the shim of ImmutableList`1.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.AllInstances.WithComparerIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableList`1.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(Quobject.Collections.Immutable.IImmutableList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.CheckRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.CheckRange(Int32 idx, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Clear">
            <summary>Sets the shim of ImmutableList`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.Constructor">
            <summary>Sets the shim of ImmutableList`1.ImmutableList`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ContainsT0">
            <summary>Sets the shim of ImmutableList`1.Contains(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.CopyToInt32T0ArrayInt32Int32">
            <summary>Sets the shim of ImmutableList`1.CopyTo(Int32 index, !0[] array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.CopyToT0Array">
            <summary>Sets the shim of ImmutableList`1.CopyTo(!0[] array)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of ImmutableList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.CountGet">
            <summary>Sets the shim of ImmutableList`1.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ExistsPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Exists(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindIndexInt32Int32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Int32 startIndex, Int32 count, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindIndexInt32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Int32 startIndex, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindIndexPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindIndex(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindLastIndexInt32Int32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Int32 startIndex, Int32 count, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindLastIndexInt32PredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Int32 startIndex, Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindLastIndexPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLastIndex(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindLastPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.FindLast(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.FindPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Find(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ForEachActionOfT0">
            <summary>Sets the shim of ImmutableList`1.ForEach(Action`1&lt;!0&gt; action)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.GetEnumerator">
            <summary>Sets the shim of ImmutableList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.GetRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.GetRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IndexOfT0">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IndexOfT0Int32">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IndexOfT0Int32Int32">
            <summary>Sets the shim of ImmutableList`1.IndexOf(!0 value, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.InsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.InsertRangeInt32IEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ItemGetInt32">
            <summary>Sets the shim of ImmutableList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.LastIndexOfT0">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.LastIndexOfT0Int32">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.LastIndexOfT0Int32Int32">
            <summary>Sets the shim of ImmutableList`1.LastIndexOf(!0 item, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTAddRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTAddT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTClear">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTInsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTInsertRangeInt32IEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTRemoveAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTRemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTRemoveRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTRemoveT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTReplaceT0T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTSetItemInt32T0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.QuobjectCollectionsImmutableIImmutableListTWithComparerIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableList`1.Quobject.Collections.Immutable.IImmutableList&lt;T&gt;.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.RemoveAllPredicateOfT0">
            <summary>Sets the shim of ImmutableList`1.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.RemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.RemoveRangeIEnumerableOfT0">
            <summary>Sets the shim of ImmutableList`1.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.RemoveRangeInt32Int32">
            <summary>Sets the shim of ImmutableList`1.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.RemoveT0">
            <summary>Sets the shim of ImmutableList`1.Remove(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ReplaceT0T0">
            <summary>Sets the shim of ImmutableList`1.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SetItemInt32T0">
            <summary>Sets the shim of ImmutableList`1.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableList`1+Builder</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.#ctor(Quobject.Collections.Immutable.ImmutableList{`0}.Builder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AddT0">
            <summary>Sets the shim of Builder.Add(!0 value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AllInstances.AddT0">
            <summary>Sets the shim of Builder.Add(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AllInstances.CountGet">
            <summary>Sets the shim of Builder.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AllInstances.InsertInt32T0">
            <summary>Sets the shim of Builder.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.AllInstances.ToImmutable">
            <summary>Sets the shim of Builder.ToImmutable()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.CountGet">
            <summary>Sets the shim of Builder.get_Count()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.InsertInt32T0">
            <summary>Sets the shim of Builder.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ShimBuilder.ToImmutable">
            <summary>Sets the shim of Builder.ToImmutable()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.StaticConstructor">
            <summary>Sets the shim of ImmutableList`1.ImmutableList`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericICollectionTClear">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericICollectionTCopyToT0ArrayInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListClear">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListRemoveAtInt32">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ImmutableList`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ToBuilder">
            <summary>Sets the shim of ImmutableList`1.ToBuilder()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.ValueComparerGet">
            <summary>Sets the shim of ImmutableList`1.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableList`1.WithComparerIEqualityComparerOfT0">
            <summary>Sets the shim of ImmutableList`1.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableQueue</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Quobject.Collections.Immutable.ImmutableQueue{``0}})">
            <summary>Sets the shim of ImmutableQueue.Create()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.CreateOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Quobject.Collections.Immutable.ImmutableQueue{``0}})">
            <summary>Sets the shim of ImmutableQueue.Create(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.CreateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Quobject.Collections.Immutable.ImmutableQueue{``0}})">
            <summary>Sets the shim of ImmutableQueue.Create(!!0 item)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.CreateOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Quobject.Collections.Immutable.ImmutableQueue{``0}})">
            <summary>Sets the shim of ImmutableQueue.Create(!!0[] items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue.DequeueOf1IImmutableQueueOfM0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Quobject.Collections.Immutable.IImmutableQueue{``0},``0,Quobject.Collections.Immutable.IImmutableQueue{``0}})">
            <summary>Sets the shim of ImmutableQueue.Dequeue(IImmutableQueue`1&lt;!!0&gt; queue, !!0&amp; value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableQueue`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.#ctor(Quobject.Collections.Immutable.ImmutableQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.Clear">
            <summary>Sets the shim of ImmutableQueue`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.Dequeue">
            <summary>Sets the shim of ImmutableQueue`1.Dequeue()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.DequeueT0Out">
            <summary>Sets the shim of ImmutableQueue`1.Dequeue(!0&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of ImmutableQueue`1.Enqueue(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ImmutableQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.IsEmptyGet">
            <summary>Sets the shim of ImmutableQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.Peek">
            <summary>Sets the shim of ImmutableQueue`1.Peek()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.QuobjectCollectionsImmutableIImmutableQueueTClear">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.QuobjectCollectionsImmutableIImmutableQueueTDequeue">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Dequeue()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.QuobjectCollectionsImmutableIImmutableQueueTEnqueueT0">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Enqueue(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Bind(Quobject.Collections.Immutable.IImmutableQueue{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Clear">
            <summary>Sets the shim of ImmutableQueue`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Constructor">
            <summary>Sets the shim of ImmutableQueue`1.ImmutableQueue`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.ConstructorImmutableStackOfT0ImmutableStackOfT0">
            <summary>Sets the shim of ImmutableQueue`1.ImmutableQueue`1(ImmutableStack`1&lt;!0&gt; frontStack, ImmutableStack`1&lt;!0&gt; backStack)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Dequeue">
            <summary>Sets the shim of ImmutableQueue`1.Dequeue()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.DequeueT0Out">
            <summary>Sets the shim of ImmutableQueue`1.Dequeue(!0&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.EnqueueT0">
            <summary>Sets the shim of ImmutableQueue`1.Enqueue(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.GetEnumerator">
            <summary>Sets the shim of ImmutableQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.IsEmptyGet">
            <summary>Sets the shim of ImmutableQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.Peek">
            <summary>Sets the shim of ImmutableQueue`1.Peek()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.QuobjectCollectionsImmutableIImmutableQueueTClear">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.QuobjectCollectionsImmutableIImmutableQueueTDequeue">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Dequeue()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.QuobjectCollectionsImmutableIImmutableQueueTEnqueueT0">
            <summary>Sets the shim of ImmutableQueue`1.Quobject.Collections.Immutable.IImmutableQueue&lt;T&gt;.Enqueue(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.ReverseIImmutableStackOfT0">
            <summary>Sets the shim of ImmutableQueue`1.Reverse(IImmutableStack`1&lt;!0&gt; stack)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.StaticConstructor">
            <summary>Sets the shim of ImmutableQueue`1.ImmutableQueue`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableQueue`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableStack">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableStack</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Quobject.Collections.Immutable.ImmutableStack{``0}})">
            <summary>Sets the shim of ImmutableStack.Create()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.CreateOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Quobject.Collections.Immutable.ImmutableStack{``0}})">
            <summary>Sets the shim of ImmutableStack.Create(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.CreateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Quobject.Collections.Immutable.ImmutableStack{``0}})">
            <summary>Sets the shim of ImmutableStack.Create(!!0 item)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.CreateOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Quobject.Collections.Immutable.ImmutableStack{``0}})">
            <summary>Sets the shim of ImmutableStack.Create(!!0[] items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack.PopOf1IImmutableStackOfM0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Quobject.Collections.Immutable.IImmutableStack{``0},``0,Quobject.Collections.Immutable.IImmutableStack{``0}})">
            <summary>Sets the shim of ImmutableStack.Pop(IImmutableStack`1&lt;!!0&gt; stack, !!0&amp; value)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1">
            <summary>Shim type of Quobject.Collections.Immutable.ImmutableStack`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.#ctor(Quobject.Collections.Immutable.ImmutableStack{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.Clear">
            <summary>Sets the shim of ImmutableStack`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ImmutableStack`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.IsEmptyGet">
            <summary>Sets the shim of ImmutableStack`1.get_IsEmpty()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.Peek">
            <summary>Sets the shim of ImmutableStack`1.Peek()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.Pop">
            <summary>Sets the shim of ImmutableStack`1.Pop()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.PopT0Out">
            <summary>Sets the shim of ImmutableStack`1.Pop(!0&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.PushT0">
            <summary>Sets the shim of ImmutableStack`1.Push(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.QuobjectCollectionsImmutableIImmutableStackTClear">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.QuobjectCollectionsImmutableIImmutableStackTPop">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Pop()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.QuobjectCollectionsImmutableIImmutableStackTPushT0">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Push(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableStack`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Bind(Quobject.Collections.Immutable.IImmutableStack{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Clear">
            <summary>Sets the shim of ImmutableStack`1.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Constructor">
            <summary>Sets the shim of ImmutableStack`1.ImmutableStack`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.ConstructorT0ImmutableStackOfT0">
            <summary>Sets the shim of ImmutableStack`1.ImmutableStack`1(!0 head, ImmutableStack`1&lt;!0&gt; tail)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.GetEnumerator">
            <summary>Sets the shim of ImmutableStack`1.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.IsEmptyGet">
            <summary>Sets the shim of ImmutableStack`1.get_IsEmpty()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Peek">
            <summary>Sets the shim of ImmutableStack`1.Peek()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.Pop">
            <summary>Sets the shim of ImmutableStack`1.Pop()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.PopT0Out">
            <summary>Sets the shim of ImmutableStack`1.Pop(!0&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.PushT0">
            <summary>Sets the shim of ImmutableStack`1.Push(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.QuobjectCollectionsImmutableIImmutableStackTClear">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.QuobjectCollectionsImmutableIImmutableStackTPop">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Pop()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.QuobjectCollectionsImmutableIImmutableStackTPushT0">
            <summary>Sets the shim of ImmutableStack`1.Quobject.Collections.Immutable.IImmutableStack&lt;T&gt;.Push(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.StaticConstructor">
            <summary>Sets the shim of ImmutableStack`1.ImmutableStack`1()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.ShimImmutableStack`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ImmutableStack`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2">
            <summary>Stub type of Quobject.Collections.Immutable.IImmutableDictionary`2</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.#ctor">
            <summary>Initializes a new instance of type StubIImmutableDictionary</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.AddRangeIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the stub of IImmutableDictionary`2.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.AddT0T1">
            <summary>Sets the stub of IImmutableDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Clear">
            <summary>Sets the stub of IImmutableDictionary`2.Clear()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.ContainsKeyT0">
            <summary>Sets the stub of IReadOnlyDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>Sets the stub of IImmutableDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; pair)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyCollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Count">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.CountGet">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Item(`0)">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.ItemGetT0">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Keys()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.KeysGet">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Keys()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)">
            <summary>Sets the stub of IImmutableDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Sets the stub of IImmutableDictionary`2.AddRange(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; pairs)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear">
            <summary>Sets the stub of IImmutableDictionary`2.Clear()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Sets the stub of IImmutableDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; pair)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)">
            <summary>Sets the stub of IImmutableDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableDictionary`2.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)">
            <summary>Sets the stub of IImmutableDictionary`2.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Sets the stub of IImmutableDictionary`2.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.RemoveRangeIEnumerableOfT0">
            <summary>Sets the stub of IImmutableDictionary`2.RemoveRange(IEnumerable`1&lt;!0&gt; keys)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.RemoveT0">
            <summary>Sets the stub of IImmutableDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.SetItemT0T1">
            <summary>Sets the stub of IImmutableDictionary`2.SetItem(!0 key, !1 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.SetItemsIEnumerableOfKeyValuePairOfT0T1">
            <summary>Sets the stub of IImmutableDictionary`2.SetItems(IEnumerable`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#ContainsKey(`0)">
            <summary>Sets the stub of IReadOnlyDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#TryGetValue(`0,`1@)">
            <summary>Sets the stub of IReadOnlyDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.TryGetValueT0T1Out">
            <summary>Sets the stub of IReadOnlyDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.Quobject#Collections#Immutable#IImmutableDictionary{TKey,TValue}#ValueComparer">
            <summary>Sets the stub of IImmutableDictionary`2.get_ValueComparer()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.ValueComparerGet">
            <summary>Sets the stub of IImmutableDictionary`2.get_ValueComparer()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Values()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableDictionary`2.ValuesGet">
            <summary>Sets the stub of IReadOnlyDictionary`2.get_Values()</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1">
            <summary>Stub type of Quobject.Collections.Immutable.IImmutableList`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.#ctor">
            <summary>Initializes a new instance of type StubIImmutableList</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.AddRangeIEnumerableOfT0">
            <summary>Sets the stub of IImmutableList`1.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.AddT0">
            <summary>Sets the stub of IImmutableList`1.Add(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Clear">
            <summary>Sets the stub of IImmutableList`1.Clear()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.ContainsT0">
            <summary>Sets the stub of IImmutableList`1.Contains(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.System#Collections#Generic#IReadOnlyCollection{T}#Count">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.CountGet">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.IndexOfT0">
            <summary>Sets the stub of IImmutableList`1.IndexOf(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.InsertInt32T0">
            <summary>Sets the stub of IImmutableList`1.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.InsertRangeInt32IEnumerableOfT0">
            <summary>Sets the stub of IImmutableList`1.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
            <summary>Sets the stub of IReadOnlyList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.ItemGetInt32">
            <summary>Sets the stub of IReadOnlyList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Add(`0)">
            <summary>Sets the stub of IImmutableList`1.Add(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableList`1.AddRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Clear">
            <summary>Sets the stub of IImmutableList`1.Clear()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Contains(`0)">
            <summary>Sets the stub of IImmutableList`1.Contains(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#IndexOf(`0)">
            <summary>Sets the stub of IImmutableList`1.IndexOf(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Insert(System.Int32,`0)">
            <summary>Sets the stub of IImmutableList`1.Insert(Int32 index, !0 element)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableList`1.InsertRange(Int32 index, IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Remove(`0)">
            <summary>Sets the stub of IImmutableList`1.Remove(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#RemoveAll(System.Predicate{`0})">
            <summary>Sets the stub of IImmutableList`1.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IImmutableList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableList`1.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#RemoveRange(System.Int32,System.Int32)">
            <summary>Sets the stub of IImmutableList`1.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#Replace(`0,`0)">
            <summary>Sets the stub of IImmutableList`1.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#SetItem(System.Int32,`0)">
            <summary>Sets the stub of IImmutableList`1.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#WithComparer(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Sets the stub of IImmutableList`1.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.RemoveAllPredicateOfT0">
            <summary>Sets the stub of IImmutableList`1.RemoveAll(Predicate`1&lt;!0&gt; match)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.RemoveAtInt32">
            <summary>Sets the stub of IImmutableList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.RemoveRangeIEnumerableOfT0">
            <summary>Sets the stub of IImmutableList`1.RemoveRange(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.RemoveRangeInt32Int32">
            <summary>Sets the stub of IImmutableList`1.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.RemoveT0">
            <summary>Sets the stub of IImmutableList`1.Remove(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.ReplaceT0T0">
            <summary>Sets the stub of IImmutableList`1.Replace(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.SetItemInt32T0">
            <summary>Sets the stub of IImmutableList`1.SetItem(Int32 index, !0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.Quobject#Collections#Immutable#IImmutableList{T}#ValueComparer">
            <summary>Sets the stub of IImmutableList`1.get_ValueComparer()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.ValueComparerGet">
            <summary>Sets the stub of IImmutableList`1.get_ValueComparer()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableList`1.WithComparerIEqualityComparerOfT0">
            <summary>Sets the stub of IImmutableList`1.WithComparer(IEqualityComparer`1&lt;!0&gt; equalityComparer)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1">
            <summary>Stub type of Quobject.Collections.Immutable.IImmutableQueue`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.#ctor">
            <summary>Initializes a new instance of type StubIImmutableQueue</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Clear">
            <summary>Sets the stub of IImmutableQueue`1.Clear()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Dequeue">
            <summary>Sets the stub of IImmutableQueue`1.Dequeue()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.EnqueueT0">
            <summary>Sets the stub of IImmutableQueue`1.Enqueue(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Quobject#Collections#Immutable#IImmutableQueue{T}#IsEmpty">
            <summary>Sets the stub of IImmutableQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.IsEmptyGet">
            <summary>Sets the stub of IImmutableQueue`1.get_IsEmpty()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Peek">
            <summary>Sets the stub of IImmutableQueue`1.Peek()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Quobject#Collections#Immutable#IImmutableQueue{T}#Clear">
            <summary>Sets the stub of IImmutableQueue`1.Clear()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Quobject#Collections#Immutable#IImmutableQueue{T}#Dequeue">
            <summary>Sets the stub of IImmutableQueue`1.Dequeue()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Quobject#Collections#Immutable#IImmutableQueue{T}#Enqueue(`0)">
            <summary>Sets the stub of IImmutableQueue`1.Enqueue(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.Quobject#Collections#Immutable#IImmutableQueue{T}#Peek">
            <summary>Sets the stub of IImmutableQueue`1.Peek()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1">
            <summary>Stub type of Quobject.Collections.Immutable.IImmutableSet`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.#ctor">
            <summary>Initializes a new instance of type StubIImmutableSet</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.AddT0">
            <summary>Sets the stub of IImmutableSet`1.Add(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Clear">
            <summary>Sets the stub of IImmutableSet`1.Clear()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.ContainsT0">
            <summary>Sets the stub of IImmutableSet`1.Contains(!0 value)</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.System#Collections#Generic#IReadOnlyCollection{T}#Count">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.CountGet">
            <summary>Sets the stub of IReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.ExceptIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.Except(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.IntersectIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.Intersect(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.IsProperSubsetOfIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.IsProperSupersetOfIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.IsSubsetOfIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.IsSupersetOfIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.OverlapsIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Add(`0)">
            <summary>Sets the stub of IImmutableSet`1.Add(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Clear">
            <summary>Sets the stub of IImmutableSet`1.Clear()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Contains(`0)">
            <summary>Sets the stub of IImmutableSet`1.Contains(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Except(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.Except(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Intersect(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.Intersect(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Remove(`0)">
            <summary>Sets the stub of IImmutableSet`1.Remove(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.SymmetricExcept(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.Quobject#Collections#Immutable#IImmutableSet{T}#Union(System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of IImmutableSet`1.Union(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.RemoveT0">
            <summary>Sets the stub of IImmutableSet`1.Remove(!0 value)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.SetEqualsIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.SymmetricExceptIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.SymmetricExcept(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableSet`1.UnionIEnumerableOfT0">
            <summary>Sets the stub of IImmutableSet`1.Union(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1">
            <summary>Stub type of Quobject.Collections.Immutable.IImmutableStack`1</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.#ctor">
            <summary>Initializes a new instance of type StubIImmutableStack</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Clear">
            <summary>Sets the stub of IImmutableStack`1.Clear()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Quobject#Collections#Immutable#IImmutableStack{T}#IsEmpty">
            <summary>Sets the stub of IImmutableStack`1.get_IsEmpty()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.IsEmptyGet">
            <summary>Sets the stub of IImmutableStack`1.get_IsEmpty()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Peek">
            <summary>Sets the stub of IImmutableStack`1.Peek()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Pop">
            <summary>Sets the stub of IImmutableStack`1.Pop()</summary>
        </member>
        <member name="F:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.PushT0">
            <summary>Sets the stub of IImmutableStack`1.Push(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Quobject#Collections#Immutable#IImmutableStack{T}#Clear">
            <summary>Sets the stub of IImmutableStack`1.Clear()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Quobject#Collections#Immutable#IImmutableStack{T}#Peek">
            <summary>Sets the stub of IImmutableStack`1.Peek()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Quobject#Collections#Immutable#IImmutableStack{T}#Pop">
            <summary>Sets the stub of IImmutableStack`1.Pop()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.Quobject#Collections#Immutable#IImmutableStack{T}#Push(`0)">
            <summary>Sets the stub of IImmutableStack`1.Push(!0 value)</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Quobject.Collections.Immutable.Fakes.StubIImmutableStack`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.EngineIOException</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.#ctor(Quobject.EngineIoClientDotNet.Client.EngineIOException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.ConstructorException">
            <summary>Sets the shim of EngineIOException.EngineIOException(Exception cause)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.ConstructorString">
            <summary>Sets the shim of EngineIOException.EngineIOException(String message)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimEngineIOException.ConstructorStringException">
            <summary>Sets the shim of EngineIOException.EngineIOException(String message, Exception cause)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.HandshakeData</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.#ctor(Quobject.EngineIoClientDotNet.Client.HandshakeData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.ConstructorJObject">
            <summary>Sets the shim of HandshakeData.HandshakeData(JObject data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimHandshakeData.ConstructorString">
            <summary>Sets the shim of HandshakeData.HandshakeData(String data)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Socket</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.#ctor(Quobject.EngineIoClientDotNet.Client.Socket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.Close">
            <summary>Sets the shim of Socket.Close()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.CreateTransportString">
            <summary>Sets the shim of Socket.CreateTransport(String name)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.FilterUpgradesIEnumerableOfString">
            <summary>Sets the shim of Socket.FilterUpgrades(IEnumerable`1&lt;String&gt; upgrades)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.Flush">
            <summary>Sets the shim of Socket.Flush()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnCloseStringException">
            <summary>Sets the shim of Socket.OnClose(String reason, Exception desc)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnDrain">
            <summary>Sets the shim of Socket.OnDrain()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnErrorException">
            <summary>Sets the shim of Socket.OnError(Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnHandshakeHandshakeData">
            <summary>Sets the shim of Socket.OnHandshake(HandshakeData handshakeData)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnHeartbeatInt64">
            <summary>Sets the shim of Socket.OnHeartbeat(Int64 timeout)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnOpen">
            <summary>Sets the shim of Socket.OnOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.OnPacketPacket">
            <summary>Sets the shim of Socket.OnPacket(Packet packet)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.Open">
            <summary>Sets the shim of Socket.Open()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.Ping">
            <summary>Sets the shim of Socket.Ping()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.ProbeString">
            <summary>Sets the shim of Socket.Probe(String name)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendByteArrayAction">
            <summary>Sets the shim of Socket.Send(Byte[] msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendPacketPacketAction">
            <summary>Sets the shim of Socket.SendPacket(Packet packet, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendPacketString">
            <summary>Sets the shim of Socket.SendPacket(String type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendPacketStringByteArrayAction">
            <summary>Sets the shim of Socket.SendPacket(String type, Byte[] data, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendPacketStringStringAction">
            <summary>Sets the shim of Socket.SendPacket(String type, String data, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SendStringAction">
            <summary>Sets the shim of Socket.Send(String msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SetPing">
            <summary>Sets the shim of Socket.SetPing()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.SetTransportTransport">
            <summary>Sets the shim of Socket.SetTransport(Transport transport)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.WriteByteArrayAction">
            <summary>Sets the shim of Socket.Write(Byte[] msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances.WriteStringAction">
            <summary>Sets the shim of Socket.Write(String msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances._OnCloseb__a">
            <summary>Sets the shim of Socket.&lt;OnClose&gt;b__a()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances._OnHeartbeatb__c">
            <summary>Sets the shim of Socket.&lt;OnHeartbeat&gt;b__c()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.AllInstances._SetPingb__3">
            <summary>Sets the shim of Socket.&lt;SetPing&gt;b__3()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Close">
            <summary>Sets the shim of Socket.Close()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Constructor">
            <summary>Sets the shim of Socket.Socket()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ConstructorSocketOptions">
            <summary>Sets the shim of Socket.Socket(Options options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ConstructorString">
            <summary>Sets the shim of Socket.Socket(String uri)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ConstructorStringSocketOptions">
            <summary>Sets the shim of Socket.Socket(String uri, Options options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ConstructorUriSocketOptions">
            <summary>Sets the shim of Socket.Socket(Uri uri, Options options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.CreateTransportString">
            <summary>Sets the shim of Socket.CreateTransport(String name)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.FilterUpgradesIEnumerableOfString">
            <summary>Sets the shim of Socket.FilterUpgrades(IEnumerable`1&lt;String&gt; upgrades)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Flush">
            <summary>Sets the shim of Socket.Flush()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnCloseStringException">
            <summary>Sets the shim of Socket.OnClose(String reason, Exception desc)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnDrain">
            <summary>Sets the shim of Socket.OnDrain()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnErrorException">
            <summary>Sets the shim of Socket.OnError(Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnHandshakeHandshakeData">
            <summary>Sets the shim of Socket.OnHandshake(HandshakeData handshakeData)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnHeartbeatInt64">
            <summary>Sets the shim of Socket.OnHeartbeat(Int64 timeout)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnOpen">
            <summary>Sets the shim of Socket.OnOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.OnPacketPacket">
            <summary>Sets the shim of Socket.OnPacket(Packet packet)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Open">
            <summary>Sets the shim of Socket.Open()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.Ping">
            <summary>Sets the shim of Socket.Ping()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ProbeString">
            <summary>Sets the shim of Socket.Probe(String name)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendByteArrayAction">
            <summary>Sets the shim of Socket.Send(Byte[] msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendPacketPacketAction">
            <summary>Sets the shim of Socket.SendPacket(Packet packet, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendPacketString">
            <summary>Sets the shim of Socket.SendPacket(String type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendPacketStringByteArrayAction">
            <summary>Sets the shim of Socket.SendPacket(String type, Byte[] data, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendPacketStringStringAction">
            <summary>Sets the shim of Socket.SendPacket(String type, String data, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SendStringAction">
            <summary>Sets the shim of Socket.Send(String msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SetPing">
            <summary>Sets the shim of Socket.SetPing()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.SetTransportTransport">
            <summary>Sets the shim of Socket.SetTransport(Transport transport)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Socket+Options</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.#ctor(Quobject.EngineIoClientDotNet.Client.Socket.Options)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.Constructor">
            <summary>Sets the shim of Options.Options()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.ShimOptions.FromURIUriSocketOptions">
            <summary>Sets the shim of Options.FromURI(Uri uri, Options opts)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.StaticConstructor">
            <summary>Sets the shim of Socket.Socket()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.String2UriString">
            <summary>Sets the shim of Socket.String2Uri(String uri)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.WriteByteArrayAction">
            <summary>Sets the shim of Socket.Write(Byte[] msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket.WriteStringAction">
            <summary>Sets the shim of Socket.Write(String msg, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket._OnCloseb__a">
            <summary>Sets the shim of Socket.&lt;OnClose&gt;b__a()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket._OnHeartbeatb__c">
            <summary>Sets the shim of Socket.&lt;OnHeartbeat&gt;b__c()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket._SendPacketb__4">
            <summary>Sets the shim of Socket.&lt;SendPacket&gt;b__4()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimSocket._SetPingb__3">
            <summary>Sets the shim of Socket.&lt;SetPing&gt;b__3()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transport</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.#ctor(Quobject.EngineIoClientDotNet.Client.Transport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.Close">
            <summary>Sets the shim of Transport.Close()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.MyPropertyGet">
            <summary>Sets the shim of Transport.get_MyProperty()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.MyPropertySetInt32">
            <summary>Sets the shim of Transport.set_MyProperty(Int32 value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnClose">
            <summary>Sets the shim of Transport.OnClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnDataByteArray">
            <summary>Sets the shim of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnDataString">
            <summary>Sets the shim of Transport.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnErrorStringException">
            <summary>Sets the shim of Transport.OnError(String message, Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnOpen">
            <summary>Sets the shim of Transport.OnOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.OnPacketPacket">
            <summary>Sets the shim of Transport.OnPacket(Packet packet)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.Open">
            <summary>Sets the shim of Transport.Open()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.SendImmutableListOfPacket">
            <summary>Sets the shim of Transport.Send(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.WritableGet">
            <summary>Sets the shim of Transport.get_Writable()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.AllInstances.WritableSetBoolean">
            <summary>Sets the shim of Transport.set_Writable(Boolean value)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.Close">
            <summary>Sets the shim of Transport.Close()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ConstructorTransportOptions">
            <summary>Sets the shim of Transport.Transport(Options options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.MyPropertyGet">
            <summary>Sets the shim of Transport.get_MyProperty()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.MyPropertySetInt32">
            <summary>Sets the shim of Transport.set_MyProperty(Int32 value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnClose">
            <summary>Sets the shim of Transport.OnClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnDataByteArray">
            <summary>Sets the shim of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnDataString">
            <summary>Sets the shim of Transport.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnErrorStringException">
            <summary>Sets the shim of Transport.OnError(String message, Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnOpen">
            <summary>Sets the shim of Transport.OnOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.OnPacketPacket">
            <summary>Sets the shim of Transport.OnPacket(Packet packet)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.Open">
            <summary>Sets the shim of Transport.Open()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.SendImmutableListOfPacket">
            <summary>Sets the shim of Transport.Send(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transport+Options</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.#ctor(Quobject.EngineIoClientDotNet.Client.Transport.Options)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.AllInstances.GetCookiesAsString">
            <summary>Sets the shim of Options.GetCookiesAsString()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.Constructor">
            <summary>Sets the shim of Options.Options()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.ShimOptions.GetCookiesAsString">
            <summary>Sets the shim of Options.GetCookiesAsString()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.StaticConstructor">
            <summary>Sets the shim of Transport.Transport()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.WritableGet">
            <summary>Sets the shim of Transport.get_Writable()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.ShimTransport.WritableSetBoolean">
            <summary>Sets the shim of Transport.set_Writable(Boolean value)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.EngineIOException</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEngineIOException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEngineIOException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.InitializeStub">
            <summary>Initializes a new instance of type StubEngineIOException</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubEngineIOException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.HandshakeData</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.InitializeStub">
            <summary>Initializes a new instance of type StubHandshakeData</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubHandshakeData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.Socket</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.#ctor(Quobject.EngineIoClientDotNet.Client.Socket.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.#ctor(System.Uri,Quobject.EngineIoClientDotNet.Client.Socket.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.#ctor(System.String,Quobject.EngineIoClientDotNet.Client.Socket.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.InitializeStub">
            <summary>Initializes a new instance of type StubSocket</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.Transport</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.#ctor(Quobject.EngineIoClientDotNet.Client.Transport.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.DoClose">
            <summary>Sets the stub of Transport.DoClose()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.DoClose01">
            <summary>Sets the stub of Transport.DoClose()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.DoOpen">
            <summary>Sets the stub of Transport.DoOpen()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.DoOpen01">
            <summary>Sets the stub of Transport.DoOpen()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.InitializeStub">
            <summary>Initializes a new instance of type StubTransport</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.OnData(System.String)">
            <summary>Sets the stub of Transport.OnData(String data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.OnData(System.Byte[])">
            <summary>Sets the stub of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.OnDataByteArray">
            <summary>Sets the stub of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.OnDataString">
            <summary>Sets the stub of Transport.OnData(String data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.Write(Quobject.Collections.Immutable.ImmutableList{Quobject.EngineIoClientDotNet.Parser.Packet})">
            <summary>Sets the stub of Transport.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Fakes.StubTransport.WriteImmutableListOfPacket">
            <summary>Sets the stub of Transport.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.Polling</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.Polling)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.DoClose">
            <summary>Sets the shim of Polling.DoClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.DoOpen">
            <summary>Sets the shim of Polling.DoOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.DoPoll">
            <summary>Sets the shim of Polling.DoPoll()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.DoWriteByteArrayAction">
            <summary>Sets the shim of Polling.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.OnDataByteArray">
            <summary>Sets the shim of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.OnDataString">
            <summary>Sets the shim of Polling.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.PauseAction">
            <summary>Sets the shim of Polling.Pause(Action onPause)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.Poll">
            <summary>Sets the shim of Polling.Poll()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.Uri">
            <summary>Sets the shim of Polling.Uri()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances.WriteImmutableListOfPacket">
            <summary>Sets the shim of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.AllInstances._onDataObject">
            <summary>Sets the shim of Polling._onData(Object data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ConstructorTransportOptions">
            <summary>Sets the shim of Polling.Polling(Options opts)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.DoClose">
            <summary>Sets the shim of Polling.DoClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.DoOpen">
            <summary>Sets the shim of Polling.DoOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.DoPoll">
            <summary>Sets the shim of Polling.DoPoll()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.DoWriteByteArrayAction">
            <summary>Sets the shim of Polling.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.OnDataByteArray">
            <summary>Sets the shim of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.OnDataString">
            <summary>Sets the shim of Polling.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.PauseAction">
            <summary>Sets the shim of Polling.Pause(Action onPause)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.Poll">
            <summary>Sets the shim of Polling.Poll()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.Polling+SendEncodeCallback</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.Polling.SendEncodeCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.AllInstances.CallObject">
            <summary>Sets the shim of SendEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.AllInstances._Callb__3">
            <summary>Sets the shim of SendEncodeCallback.&lt;Call&gt;b__3()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.Bind(Quobject.EngineIoClientDotNet.Parser.IEncodeCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.CallObject">
            <summary>Sets the shim of SendEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback.ConstructorPolling">
            <summary>Sets the shim of SendEncodeCallback.SendEncodeCallback(Polling polling)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.ShimSendEncodeCallback._Callb__3">
            <summary>Sets the shim of SendEncodeCallback.&lt;Call&gt;b__3()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.StaticConstructor">
            <summary>Sets the shim of Polling.Polling()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.Uri">
            <summary>Sets the shim of Polling.Uri()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling.WriteImmutableListOfPacket">
            <summary>Sets the shim of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPolling._onDataObject">
            <summary>Sets the shim of Polling._onData(Object data)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.AllInstances.DoPoll">
            <summary>Sets the shim of PollingXHR.DoPoll()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.AllInstances.DoWriteByteArrayAction">
            <summary>Sets the shim of PollingXHR.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.AllInstances.Request">
            <summary>Sets the shim of PollingXHR.Request()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.AllInstances.RequestXHRRequestPollingXHRRequestOptions">
            <summary>Sets the shim of PollingXHR.Request(RequestOptions opts)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ConstructorTransportOptions">
            <summary>Sets the shim of PollingXHR.PollingXHR(Options options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.DoPoll">
            <summary>Sets the shim of PollingXHR.DoPoll()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.DoWriteByteArrayAction">
            <summary>Sets the shim of PollingXHR.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.Request">
            <summary>Sets the shim of PollingXHR.Request()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.RequestXHRRequestPollingXHRRequestOptions">
            <summary>Sets the shim of PollingXHR.Request(RequestOptions opts)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR+XHRRequest</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR.XHRRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.Create">
            <summary>Sets the shim of XHRRequest.Create()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnDataByteArray">
            <summary>Sets the shim of XHRRequest.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnDataString">
            <summary>Sets the shim of XHRRequest.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnErrorException">
            <summary>Sets the shim of XHRRequest.OnError(Exception err)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnRequestHeadersDictionaryOfStringString">
            <summary>Sets the shim of XHRRequest.OnRequestHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnResponseHeadersDictionaryOfStringString">
            <summary>Sets the shim of XHRRequest.OnResponseHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances.OnSuccess">
            <summary>Sets the shim of XHRRequest.OnSuccess()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.AllInstances._Createb__2">
            <summary>Sets the shim of XHRRequest.&lt;Create&gt;b__2()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ConstructorXHRRequestPollingXHRRequestOptions">
            <summary>Sets the shim of XHRRequest.XHRRequest(RequestOptions options)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.Create">
            <summary>Sets the shim of XHRRequest.Create()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnDataByteArray">
            <summary>Sets the shim of XHRRequest.OnData(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnDataString">
            <summary>Sets the shim of XHRRequest.OnData(String data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnErrorException">
            <summary>Sets the shim of XHRRequest.OnError(Exception err)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnRequestHeadersDictionaryOfStringString">
            <summary>Sets the shim of XHRRequest.OnRequestHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnResponseHeadersDictionaryOfStringString">
            <summary>Sets the shim of XHRRequest.OnResponseHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.OnSuccess">
            <summary>Sets the shim of XHRRequest.OnSuccess()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR+XHRRequest+RequestOptions</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR.XHRRequest.RequestOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest.ShimRequestOptions.Constructor">
            <summary>Sets the shim of RequestOptions.RequestOptions()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimPollingXHR.ShimXHRRequest._Createb__2">
            <summary>Sets the shim of XHRRequest.&lt;Create&gt;b__2()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.WebSocket</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.WebSocket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.DoClose">
            <summary>Sets the shim of WebSocket.DoClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.DoOpen">
            <summary>Sets the shim of WebSocket.DoOpen()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.Uri">
            <summary>Sets the shim of WebSocket.Uri()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.WriteImmutableListOfPacket">
            <summary>Sets the shim of WebSocket.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.ws_ClosedObjectEventArgs">
            <summary>Sets the shim of WebSocket.ws_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.ws_DataReceivedObjectDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.ws_DataReceived(Object sender, DataReceivedEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.ws_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocket.ws_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.ws_MessageReceivedObjectMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.ws_MessageReceived(Object sender, MessageReceivedEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.AllInstances.ws_OpenedObjectEventArgs">
            <summary>Sets the shim of WebSocket.ws_Opened(Object sender, EventArgs e)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ConstructorTransportOptions">
            <summary>Sets the shim of WebSocket.WebSocket(Options opts)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.DoClose">
            <summary>Sets the shim of WebSocket.DoClose()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.DoOpen">
            <summary>Sets the shim of WebSocket.DoOpen()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Client.Transports.WebSocket+WriteEncodeCallback</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.#ctor(Quobject.EngineIoClientDotNet.Client.Transports.WebSocket.WriteEncodeCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.AllInstances.CallObject">
            <summary>Sets the shim of WriteEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.Bind(Quobject.EngineIoClientDotNet.Parser.IEncodeCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.CallObject">
            <summary>Sets the shim of WriteEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ShimWriteEncodeCallback.ConstructorWebSocket">
            <summary>Sets the shim of WriteEncodeCallback.WriteEncodeCallback(WebSocket webSocket)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.StaticConstructor">
            <summary>Sets the shim of WebSocket.WebSocket()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.Uri">
            <summary>Sets the shim of WebSocket.Uri()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.WriteImmutableListOfPacket">
            <summary>Sets the shim of WebSocket.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ws_ClosedObjectEventArgs">
            <summary>Sets the shim of WebSocket.ws_Closed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ws_DataReceivedObjectDataReceivedEventArgs">
            <summary>Sets the shim of WebSocket.ws_DataReceived(Object sender, DataReceivedEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ws_ErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocket.ws_Error(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ws_MessageReceivedObjectMessageReceivedEventArgs">
            <summary>Sets the shim of WebSocket.ws_MessageReceived(Object sender, MessageReceivedEventArgs e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.ShimWebSocket.ws_OpenedObjectEventArgs">
            <summary>Sets the shim of WebSocket.ws_Opened(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.Transports.Polling</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.#ctor(Quobject.EngineIoClientDotNet.Client.Transport.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoClose">
            <summary>Sets the stub of Polling.DoClose()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoClose01">
            <summary>Sets the stub of Polling.DoClose()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoOpen">
            <summary>Sets the stub of Polling.DoOpen()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoOpen01">
            <summary>Sets the stub of Polling.DoOpen()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoPoll">
            <summary>Sets the stub of Polling.DoPoll()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoPoll01">
            <summary>Sets the stub of Polling.DoPoll()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoWrite(System.Byte[],System.Action)">
            <summary>Sets the stub of Polling.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.DoWriteByteArrayAction">
            <summary>Sets the stub of Polling.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.InitializeStub">
            <summary>Initializes a new instance of type StubPolling</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.OnData(System.Byte[])">
            <summary>Sets the stub of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.OnData(System.String)">
            <summary>Sets the stub of Polling.OnData(String data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.OnDataByteArray">
            <summary>Sets the stub of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.OnDataString">
            <summary>Sets the stub of Polling.OnData(String data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.Write(Quobject.Collections.Immutable.ImmutableList{Quobject.EngineIoClientDotNet.Parser.Packet})">
            <summary>Sets the stub of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPolling.WriteImmutableListOfPacket">
            <summary>Sets the stub of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.Transports.PollingXHR</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.#ctor(Quobject.EngineIoClientDotNet.Client.Transport.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoClose">
            <summary>Sets the stub of Polling.DoClose()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoClose01">
            <summary>Sets the stub of Polling.DoClose()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoOpen">
            <summary>Sets the stub of Polling.DoOpen()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoOpen01">
            <summary>Sets the stub of Polling.DoOpen()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoPoll">
            <summary>Sets the stub of PollingXHR.DoPoll()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoPoll01">
            <summary>Sets the stub of PollingXHR.DoPoll()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoWrite(System.Byte[],System.Action)">
            <summary>Sets the stub of PollingXHR.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.DoWriteByteArrayAction">
            <summary>Sets the stub of PollingXHR.DoWrite(Byte[] data, Action action)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.InitializeStub">
            <summary>Initializes a new instance of type StubPollingXHR</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.OnData(System.Byte[])">
            <summary>Sets the stub of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.OnData(System.String)">
            <summary>Sets the stub of Polling.OnData(String data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.OnDataByteArray">
            <summary>Sets the stub of Polling.OnData(Byte[] data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.OnDataString">
            <summary>Sets the stub of Polling.OnData(String data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.Write(Quobject.Collections.Immutable.ImmutableList{Quobject.EngineIoClientDotNet.Parser.Packet})">
            <summary>Sets the stub of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubPollingXHR.WriteImmutableListOfPacket">
            <summary>Sets the stub of Polling.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Client.Transports.WebSocket</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.#ctor(Quobject.EngineIoClientDotNet.Client.Transport.Options)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.DoClose">
            <summary>Sets the stub of WebSocket.DoClose()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.DoClose01">
            <summary>Sets the stub of WebSocket.DoClose()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.DoOpen">
            <summary>Sets the stub of WebSocket.DoOpen()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.DoOpen01">
            <summary>Sets the stub of WebSocket.DoOpen()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocket</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.OnData(System.Byte[])">
            <summary>Sets the stub of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.OnData(System.String)">
            <summary>Sets the stub of Transport.OnData(String data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.OnDataByteArray">
            <summary>Sets the stub of Transport.OnData(Byte[] data)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.OnDataString">
            <summary>Sets the stub of Transport.OnData(String data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.Write(Quobject.Collections.Immutable.ImmutableList{Quobject.EngineIoClientDotNet.Parser.Packet})">
            <summary>Sets the stub of WebSocket.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Client.Transports.Fakes.StubWebSocket.WriteImmutableListOfPacket">
            <summary>Sets the stub of WebSocket.Write(ImmutableList`1&lt;Packet&gt; packets)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter">
            <summary>Shim type of Quobject.EngineIoClientDotNet.ComponentEmitter.Emitter</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.#ctor(Quobject.EngineIoClientDotNet.ComponentEmitter.Emitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.EmitStringObjectArray">
            <summary>Sets the shim of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.HasListenersString">
            <summary>Sets the shim of Emitter.HasListeners(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.ListenersString">
            <summary>Sets the shim of Emitter.Listeners(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.Off">
            <summary>Sets the shim of Emitter.Off()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OffString">
            <summary>Sets the shim of Emitter.Off(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OffStringIListener">
            <summary>Sets the shim of Emitter.Off(String eventString, IListener fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OnStringAction">
            <summary>Sets the shim of Emitter.On(String eventString, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OnStringActionOfObject">
            <summary>Sets the shim of Emitter.On(String eventString, Action`1&lt;Object&gt; fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OnStringIListener">
            <summary>Sets the shim of Emitter.On(String eventString, IListener fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OnceStringAction">
            <summary>Sets the shim of Emitter.Once(String eventString, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.AllInstances.OnceStringIListener">
            <summary>Sets the shim of Emitter.Once(String eventString, IListener fn)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.Constructor">
            <summary>Sets the shim of Emitter.Emitter()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.EmitStringObjectArray">
            <summary>Sets the shim of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.HasListenersString">
            <summary>Sets the shim of Emitter.HasListeners(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.ListenersString">
            <summary>Sets the shim of Emitter.Listeners(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.Off">
            <summary>Sets the shim of Emitter.Off()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OffString">
            <summary>Sets the shim of Emitter.Off(String eventString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OffStringIListener">
            <summary>Sets the shim of Emitter.Off(String eventString, IListener fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OnStringAction">
            <summary>Sets the shim of Emitter.On(String eventString, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OnStringActionOfObject">
            <summary>Sets the shim of Emitter.On(String eventString, Action`1&lt;Object&gt; fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OnStringIListener">
            <summary>Sets the shim of Emitter.On(String eventString, IListener fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OnceStringAction">
            <summary>Sets the shim of Emitter.Once(String eventString, Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimEmitter.OnceStringIListener">
            <summary>Sets the shim of Emitter.Once(String eventString, IListener fn)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl">
            <summary>Shim type of Quobject.EngineIoClientDotNet.ComponentEmitter.ListenerImpl</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.#ctor(Quobject.EngineIoClientDotNet.ComponentEmitter.ListenerImpl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.AllInstances.CallObjectArray">
            <summary>Sets the shim of ListenerImpl.Call(Object[] args)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.AllInstances.CompareToIListener">
            <summary>Sets the shim of ListenerImpl.CompareTo(IListener other)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.AllInstances.GetId">
            <summary>Sets the shim of ListenerImpl.GetId()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.Bind(Quobject.EngineIoClientDotNet.ComponentEmitter.IListener)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.Bind(System.IComparable{Quobject.EngineIoClientDotNet.ComponentEmitter.IListener})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.CallObjectArray">
            <summary>Sets the shim of ListenerImpl.Call(Object[] args)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.CompareToIListener">
            <summary>Sets the shim of ListenerImpl.CompareTo(IListener other)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.ConstructorAction">
            <summary>Sets the shim of ListenerImpl.ListenerImpl(Action fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.ConstructorActionOfObject">
            <summary>Sets the shim of ListenerImpl.ListenerImpl(Action`1&lt;Object&gt; fn)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.GetId">
            <summary>Sets the shim of ListenerImpl.GetId()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimListenerImpl.StaticConstructor">
            <summary>Sets the shim of ListenerImpl.ListenerImpl()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener">
            <summary>Shim type of Quobject.EngineIoClientDotNet.ComponentEmitter.OnceListener</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.#ctor(Quobject.EngineIoClientDotNet.ComponentEmitter.OnceListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.AllInstances.CompareToIListener">
            <summary>Sets the shim of OnceListener.CompareTo(IListener other)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.AllInstances.GetId">
            <summary>Sets the shim of OnceListener.GetId()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.AllInstances.QuobjectEngineIoClientDotNetComponentEmitterIListenerCallObjectArray">
            <summary>Sets the shim of OnceListener.Quobject.EngineIoClientDotNet.ComponentEmitter.IListener.Call(Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.Bind(Quobject.EngineIoClientDotNet.ComponentEmitter.IListener)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.Bind(System.IComparable{Quobject.EngineIoClientDotNet.ComponentEmitter.IListener})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.CompareToIListener">
            <summary>Sets the shim of OnceListener.CompareTo(IListener other)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.ConstructorStringIListenerEmitter">
            <summary>Sets the shim of OnceListener.OnceListener(String eventString, IListener fn, Emitter emitter)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.GetId">
            <summary>Sets the shim of OnceListener.GetId()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.QuobjectEngineIoClientDotNetComponentEmitterIListenerCallObjectArray">
            <summary>Sets the shim of OnceListener.Quobject.EngineIoClientDotNet.ComponentEmitter.IListener.Call(Object[] args)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.ShimOnceListener.StaticConstructor">
            <summary>Sets the shim of OnceListener.OnceListener()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter">
            <summary>Stub type of Quobject.EngineIoClientDotNet.ComponentEmitter.Emitter</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.Emit(System.String,System.Object[])">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.EmitStringObjectArray">
            <summary>Sets the stub of Emitter.Emit(String eventString, Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubEmitter</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener">
            <summary>Stub type of Quobject.EngineIoClientDotNet.ComponentEmitter.IListener</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.#ctor">
            <summary>Initializes a new instance of type StubIListener</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.CallObjectArray">
            <summary>Sets the stub of IListener.Call(Object[] args)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.CompareToIListener">
            <summary>Sets the stub of IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.GetId">
            <summary>Sets the stub of IListener.GetId()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.Quobject#EngineIoClientDotNet#ComponentEmitter#IListener#Call(System.Object[])">
            <summary>Sets the stub of IListener.Call(Object[] args)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.Quobject#EngineIoClientDotNet#ComponentEmitter#IListener#GetId">
            <summary>Sets the stub of IListener.GetId()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubIListener.System#IComparable{Quobject#EngineIoClientDotNet#ComponentEmitter#IListener}#CompareTo(Quobject.EngineIoClientDotNet.ComponentEmitter.IListener)">
            <summary>Sets the stub of IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl">
            <summary>Stub type of Quobject.EngineIoClientDotNet.ComponentEmitter.ListenerImpl</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.#ctor(System.Action)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.#ctor(System.Action{System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.InitializeStub">
            <summary>Initializes a new instance of type StubListenerImpl</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubListenerImpl.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener">
            <summary>Stub type of Quobject.EngineIoClientDotNet.ComponentEmitter.OnceListener</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener.#ctor(System.String,Quobject.EngineIoClientDotNet.ComponentEmitter.IListener,Quobject.EngineIoClientDotNet.ComponentEmitter.Emitter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener.InitializeStub">
            <summary>Initializes a new instance of type StubOnceListener</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.ComponentEmitter.Fakes.StubOnceListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.Global</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.CallerNameStringInt32String">
            <summary>Sets the shim of Global.CallerName(String caller, Int32 number, String path)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.DecodeURIComponentString">
            <summary>Sets the shim of Global.DecodeURIComponent(String str)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.EncodeURIComponentString">
            <summary>Sets the shim of Global.EncodeURIComponent(String str)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimGlobal.StripInvalidUnicodeCharactersString">
            <summary>Sets the shim of Global.StripInvalidUnicodeCharacters(String str)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.LogManager</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.#ctor(Quobject.EngineIoClientDotNet.Modules.LogManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.AllInstances.ErrorException">
            <summary>Sets the shim of LogManager.Error(Exception e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.AllInstances.ErrorStringException">
            <summary>Sets the shim of LogManager.Error(String p, Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.AllInstances.InfoString">
            <summary>Sets the shim of LogManager.Info(String msg)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.ConstructorString">
            <summary>Sets the shim of LogManager.LogManager(String type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.ErrorException">
            <summary>Sets the shim of LogManager.Error(Exception e)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.ErrorStringException">
            <summary>Sets the shim of LogManager.Error(String p, Exception exception)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.GetLoggerMethodBase">
            <summary>Sets the shim of LogManager.GetLogger(MethodBase methodBase)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.GetLoggerString">
            <summary>Sets the shim of LogManager.GetLogger(String type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.GetLoggerType">
            <summary>Sets the shim of LogManager.GetLogger(Type type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.InfoString">
            <summary>Sets the shim of LogManager.Info(String msg)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.SetupLogManager">
            <summary>Sets the shim of LogManager.SetupLogManager()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimLogManager.StaticConstructor">
            <summary>Sets the shim of LogManager.LogManager()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.ParseQS</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.#ctor(Quobject.EngineIoClientDotNet.Modules.ParseQS)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.Constructor">
            <summary>Sets the shim of ParseQS.ParseQS()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.DecodeString">
            <summary>Sets the shim of ParseQS.Decode(String qs)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.EncodeDictionaryOfStringString">
            <summary>Sets the shim of ParseQS.Encode(Dictionary`2&lt;String,String&gt; obj)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS.EncodeImmutableDictionaryOfStringString">
            <summary>Sets the shim of ParseQS.Encode(ImmutableDictionary`2&lt;String,String&gt; obj)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimParseQS._Encodeb__0String">
            <summary>Sets the shim of ParseQS.&lt;Encode&gt;b__0(String x)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.ServerCertificate</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.#ctor(Quobject.EngineIoClientDotNet.Modules.ServerCertificate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.Constructor">
            <summary>Sets the shim of ServerCertificate.ServerCertificate()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.IgnoreGet">
            <summary>Sets the shim of ServerCertificate.get_Ignore()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.IgnoreServerCertificateValidation">
            <summary>Sets the shim of ServerCertificate.IgnoreServerCertificateValidation()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.IgnoreSetBoolean">
            <summary>Sets the shim of ServerCertificate.set_Ignore(Boolean value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimServerCertificate.StaticConstructor">
            <summary>Sets the shim of ServerCertificate.ServerCertificate()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.UTF8</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.#ctor(Quobject.EngineIoClientDotNet.Modules.UTF8)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.Constructor">
            <summary>Sets the shim of UTF8.UTF8()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.CreateByteInt32Int32">
            <summary>Sets the shim of UTF8.CreateByte(Int32 codePoint, Int32 shift)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.DecodeString">
            <summary>Sets the shim of UTF8.Decode(String byteString)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.DecodeSymbol">
            <summary>Sets the shim of UTF8.DecodeSymbol()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.EncodeCodePointInt32">
            <summary>Sets the shim of UTF8.EncodeCodePoint(Int32 codePoint)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.EncodeString">
            <summary>Sets the shim of UTF8.Encode(String str)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.ReadContinuationByte">
            <summary>Sets the shim of UTF8.ReadContinuationByte()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.Ucs2DecodeString">
            <summary>Sets the shim of UTF8.Ucs2Decode(String str)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8.Ucs2EncodeListOfInt32">
            <summary>Sets the shim of UTF8.Ucs2Encode(List`1&lt;Int32&gt; array)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Modules.UTF8Exception</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.#ctor(Quobject.EngineIoClientDotNet.Modules.UTF8Exception)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.ShimUTF8Exception.ConstructorString">
            <summary>Sets the shim of UTF8Exception.UTF8Exception(String message)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Modules.LogManager</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager.InitializeStub">
            <summary>Initializes a new instance of type StubLogManager</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubLogManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Modules.ParseQS</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS.InitializeStub">
            <summary>Initializes a new instance of type StubParseQS</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubParseQS.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Modules.ServerCertificate</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate.InitializeStub">
            <summary>Initializes a new instance of type StubServerCertificate</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubServerCertificate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Modules.UTF8</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8.InitializeStub">
            <summary>Initializes a new instance of type StubUTF8</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Modules.UTF8Exception</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUTF8Exception.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUTF8Exception.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.InitializeStub">
            <summary>Initializes a new instance of type StubUTF8Exception</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Modules.Fakes.StubUTF8Exception.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Parser.ByteBuffer</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.#ctor(Quobject.EngineIoClientDotNet.Parser.ByteBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.Array">
            <summary>Sets the shim of ByteBuffer.Array()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.CapacityGet">
            <summary>Sets the shim of ByteBuffer.get_Capacity()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.Clear">
            <summary>Sets the shim of ByteBuffer.Clear()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.GetByteArray">
            <summary>Sets the shim of ByteBuffer.Get(Byte[] dst)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.GetByteArrayInt32Int32">
            <summary>Sets the shim of ByteBuffer.Get(Byte[] dst, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.GetInt64">
            <summary>Sets the shim of ByteBuffer.Get(Int64 index)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.LimitInt64">
            <summary>Sets the shim of ByteBuffer.Limit(Int64 newLimit)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.PositionInt64">
            <summary>Sets the shim of ByteBuffer.Position(Int64 newPosition)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.PutByteArray">
            <summary>Sets the shim of ByteBuffer.Put(Byte[] buf)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllInstances.Remaining">
            <summary>Sets the shim of ByteBuffer.Remaining()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.AllocateInt32">
            <summary>Sets the shim of ByteBuffer.Allocate(Int32 length)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.Array">
            <summary>Sets the shim of ByteBuffer.Array()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.CapacityGet">
            <summary>Sets the shim of ByteBuffer.get_Capacity()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.Clear">
            <summary>Sets the shim of ByteBuffer.Clear()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.ConstructorInt32">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Int32 length)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.GetByteArray">
            <summary>Sets the shim of ByteBuffer.Get(Byte[] dst)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.GetByteArrayInt32Int32">
            <summary>Sets the shim of ByteBuffer.Get(Byte[] dst, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.GetInt64">
            <summary>Sets the shim of ByteBuffer.Get(Int64 index)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.LimitInt64">
            <summary>Sets the shim of ByteBuffer.Limit(Int64 newLimit)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.PositionInt64">
            <summary>Sets the shim of ByteBuffer.Position(Int64 newPosition)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.PutByteArray">
            <summary>Sets the shim of ByteBuffer.Put(Byte[] buf)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.Remaining">
            <summary>Sets the shim of ByteBuffer.Remaining()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimByteBuffer.WrapByteArray">
            <summary>Sets the shim of ByteBuffer.Wrap(Byte[] data)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Parser.Packet</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.#ctor(Quobject.EngineIoClientDotNet.Parser.Packet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.DataGet">
            <summary>Sets the shim of Packet.get_Data()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.DataSetObject">
            <summary>Sets the shim of Packet.set_Data(Object value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.EncodeBase64PacketIEncodeCallback">
            <summary>Sets the shim of Packet.EncodeBase64Packet(IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.EncodeByteArrayIEncodeCallback">
            <summary>Sets the shim of Packet.EncodeByteArray(IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.EncodeIEncodeCallbackBoolean">
            <summary>Sets the shim of Packet.Encode(IEncodeCallback callback, Boolean utf8encode)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.TypeGet">
            <summary>Sets the shim of Packet.get_Type()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.AllInstances.TypeSetString">
            <summary>Sets the shim of Packet.set_Type(String value)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.ByteArrayToStringByteArray">
            <summary>Sets the shim of Packet.ByteArrayToString(Byte[] bytes)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.ConstructorString">
            <summary>Sets the shim of Packet.Packet(String type)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.ConstructorStringObject">
            <summary>Sets the shim of Packet.Packet(String type, Object data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DataGet">
            <summary>Sets the shim of Packet.get_Data()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DataSetObject">
            <summary>Sets the shim of Packet.set_Data(Object value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DecodeBase64PacketString">
            <summary>Sets the shim of Packet.DecodeBase64Packet(String msg)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DecodePacketByteArray">
            <summary>Sets the shim of Packet.DecodePacket(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DecodePacketStringBoolean">
            <summary>Sets the shim of Packet.DecodePacket(String data, Boolean utf8decode)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DecodePayloadByteArrayIDecodePayloadCallback">
            <summary>Sets the shim of Packet.DecodePayload(Byte[] data, IDecodePayloadCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.DecodePayloadStringIDecodePayloadCallback">
            <summary>Sets the shim of Packet.DecodePayload(String data, IDecodePayloadCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.EncodeBase64PacketIEncodeCallback">
            <summary>Sets the shim of Packet.EncodeBase64Packet(IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.EncodeByteArrayIEncodeCallback">
            <summary>Sets the shim of Packet.EncodeByteArray(IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.EncodeIEncodeCallbackBoolean">
            <summary>Sets the shim of Packet.Encode(IEncodeCallback callback, Boolean utf8encode)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.EncodePayloadPacketArrayIEncodeCallback">
            <summary>Sets the shim of Packet.EncodePayload(Packet[] packets, IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.StaticConstructor">
            <summary>Sets the shim of Packet.Packet()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.StringToByteArrayString">
            <summary>Sets the shim of Packet.StringToByteArray(String str)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.TypeGet">
            <summary>Sets the shim of Packet.get_Type()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket.TypeSetString">
            <summary>Sets the shim of Packet.set_Type(String value)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimPacket._ByteArrayToStringb__1Byte">
            <summary>Sets the shim of Packet.&lt;ByteArrayToString&gt;b__1(Byte b)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Parser.Parser</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.#ctor(Quobject.EngineIoClientDotNet.Parser.Parser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.Constructor">
            <summary>Sets the shim of Parser.Parser()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.DecodePacketByteArray">
            <summary>Sets the shim of Parser.DecodePacket(Byte[] data)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.DecodePacketStringBoolean">
            <summary>Sets the shim of Parser.DecodePacket(String data, Boolean utf8decode)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.DecodePayloadByteArrayIDecodePayloadCallback">
            <summary>Sets the shim of Parser.DecodePayload(Byte[] data, IDecodePayloadCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.DecodePayloadStringIDecodePayloadCallback">
            <summary>Sets the shim of Parser.DecodePayload(String data, IDecodePayloadCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.EncodePacketPacketIEncodeCallback">
            <summary>Sets the shim of Parser.EncodePacket(Packet packet, IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.EncodePayloadPacketArrayIEncodeCallback">
            <summary>Sets the shim of Parser.EncodePayload(Packet[] packets, IEncodeCallback callback)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.ShimParser.StaticConstructor">
            <summary>Sets the shim of Parser.Parser()</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Parser.ByteBuffer</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubByteBuffer</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubByteBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIDecodePayloadCallback">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Parser.IDecodePayloadCallback</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIDecodePayloadCallback.#ctor">
            <summary>Initializes a new instance of type StubIDecodePayloadCallback</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIDecodePayloadCallback.CallPacketInt32Int32">
            <summary>Sets the stub of IDecodePayloadCallback.Call(Packet packet, Int32 index, Int32 total)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIDecodePayloadCallback.Quobject#EngineIoClientDotNet#Parser#IDecodePayloadCallback#Call(Quobject.EngineIoClientDotNet.Parser.Packet,System.Int32,System.Int32)">
            <summary>Sets the stub of IDecodePayloadCallback.Call(Packet packet, Int32 index, Int32 total)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIEncodeCallback">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Parser.IEncodeCallback</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIEncodeCallback.#ctor">
            <summary>Initializes a new instance of type StubIEncodeCallback</summary>
        </member>
        <member name="F:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIEncodeCallback.CallObject">
            <summary>Sets the stub of IEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubIEncodeCallback.Quobject#EngineIoClientDotNet#Parser#IEncodeCallback#Call(System.Object)">
            <summary>Sets the stub of IEncodeCallback.Call(Object data)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Parser.Packet</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.InitializeStub">
            <summary>Initializes a new instance of type StubPacket</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Parser.Fakes.StubPacket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer">
            <summary>Shim type of Quobject.EngineIoClientDotNet.Thread.EasyTimer</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.#ctor(Quobject.EngineIoClientDotNet.Thread.EasyTimer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.AllInstances.Stop">
            <summary>Sets the shim of EasyTimer.Stop()</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.ConstructorCancellationTokenSource">
            <summary>Sets the shim of EasyTimer.EasyTimer(CancellationTokenSource ts)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.SetTimeoutActionInt32">
            <summary>Sets the shim of EasyTimer.SetTimeout(Action method, Int32 delayInMilliseconds)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.Stop">
            <summary>Sets the shim of EasyTimer.Stop()</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.TaskRunAction">
            <summary>Sets the shim of EasyTimer.TaskRun(Action action)</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.ShimEasyTimer.TaskRunNoWaitAction">
            <summary>Sets the shim of EasyTimer.TaskRunNoWait(Action action)</summary>
        </member>
        <member name="T:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer">
            <summary>Stub type of Quobject.EngineIoClientDotNet.Thread.EasyTimer</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer.#ctor(System.Threading.CancellationTokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer.InitializeStub">
            <summary>Initializes a new instance of type StubEasyTimer</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Quobject.EngineIoClientDotNet.Thread.Fakes.StubEasyTimer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
